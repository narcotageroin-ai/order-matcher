import pandas as pd
import streamlit as st
from io import BytesIO
from openpyxl import load_workbook

st.set_page_config(page_title="–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤", page_icon="üì¶", layout="centered")
st.title("üì¶ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º")

def load_excel(file):
    if file.name.endswith(".xlsx"):
        return pd.read_excel(file, engine="openpyxl")
    elif file.name.endswith(".xls"):
        return pd.read_excel(file, engine="xlrd")
    elif file.name.endswith(".csv"):
        return pd.read_csv(file)
    else:
        st.error("‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã .xls, .xlsx –∏–ª–∏ .csv")
        return None

file_order = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –∑–∞–∫–∞–∑–∞ (Excel –∏–ª–∏ CSV)", type=["xls", "xlsx", "csv"])
file_supplier = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (Excel –∏–ª–∏ CSV)", type=["xls", "xlsx", "csv"])

if file_order and file_supplier:
    df_order = load_excel(file_order)
    df_supplier = load_excel(file_supplier)

    if df_order is not None and df_supplier is not None:
        st.subheader("–ù–∞—à —Ñ–∞–π–ª –∑–∞–∫–∞–∑–∞:")
        st.dataframe(df_order.head())

        st.subheader("–§–∞–π–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:")
        st.dataframe(df_supplier.head())

        order_keys = st.multiselect("–°—Ç–æ–ª–±—Ü—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ (–Ω–∞—à —Ñ–∞–π–ª)", df_order.columns)
        supplier_keys = st.multiselect("–°—Ç–æ–ª–±—Ü—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ (—Ñ–∞–π–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞)", df_supplier.columns)
        qty_col = st.selectbox("–°—Ç–æ–ª–±–µ—Ü —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º (–Ω–∞—à —Ñ–∞–π–ª)", df_order.columns)
        supplier_qty_col = st.selectbox("–°—Ç–æ–ª–±–µ—Ü –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", df_supplier.columns)

        if len(order_keys) != len(supplier_keys):
            st.warning("‚ö†Ô∏è –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –æ–±–æ–∏—Ö —Ñ–∞–π–ª–∞—Ö.")
        elif st.button("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª"):
            stats = {}
            matched = 0

            file_supplier.seek(0)
            wb = load_workbook(file_supplier)
            ws = wb.active

            supplier_columns = list(df_supplier.columns)
            supplier_col_index_map = {col: idx+1 for idx, col in enumerate(supplier_columns)}
            supplier_qty_col_idx = supplier_col_index_map[supplier_qty_col]

            for idx, (okey, skey) in enumerate(zip(order_keys, supplier_keys), start=1):
                qty_dict = dict(zip(df_order[okey].astype(str), df_order[qty_col]))
                found = 0

                for row in range(2, ws.max_row + 1):
                    key_val = str(ws.cell(row=row, column=supplier_col_index_map[skey]).value)
                    if key_val in qty_dict and ws.cell(row=row, column=supplier_qty_col_idx).value is None:
                        ws.cell(row=row, column=supplier_qty_col_idx).value = qty_dict[key_val]
                        found += 1

                key_name = f"{order_keys[idx-1]} -> {supplier_keys[idx-1]}"
                stats[f"–ù–∞–π–¥–µ–Ω–æ –ø–æ –∫–ª—é—á—É {idx} ({key_name})"] = found
                matched += found

            total = len(df_supplier)
            not_found = total - matched

            st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            st.write(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: **{total}**")
            for k, v in stats.items():
                st.write(f"üîç {k}: **{v}**")
            st.write(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ: **{not_found}**")

            output = BytesIO()
            wb.save(output)

            st.success("‚úÖ –ì–æ—Ç–æ–≤–æ! –°–∫–∞—á–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∏–∂–µ.")
            st.download_button(
                label="‚¨á –°–∫–∞—á–∞—Ç—å –≥–æ—Ç–æ–≤—ã–π Excel (—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–∞)",
                data=output.getvalue(),
                file_name="supplier_with_qty.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )
