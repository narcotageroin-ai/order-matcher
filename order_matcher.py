import pandas as pd
import streamlit as st
from io import BytesIO

st.set_page_config(page_title="–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤", page_icon="üì¶", layout="centered")
st.title("üì¶ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞–º")

def load_excel(file):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é"""
    if file.name.endswith(".xlsx"):
        return pd.read_excel(file, engine="openpyxl")
    elif file.name.endswith(".xls"):
        return pd.read_excel(file, engine="xlrd")
    elif file.name.endswith(".csv"):
        return pd.read_csv(file)
    else:
        st.error("‚ùå –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã .xls, .xlsx –∏–ª–∏ .csv")
        return None

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã
file_order = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –∑–∞–∫–∞–∑–∞ (Excel –∏–ª–∏ CSV)", type=["xls", "xlsx", "csv"])
file_supplier = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ (Excel –∏–ª–∏ CSV)", type=["xls", "xlsx", "csv"])

if file_order and file_supplier:
    df_order = load_excel(file_order)
    df_supplier = load_excel(file_supplier)

    if df_order is not None and df_supplier is not None:
        st.subheader("–ù–∞—à —Ñ–∞–π–ª –∑–∞–∫–∞–∑–∞:")
        st.dataframe(df_order.head())

        st.subheader("–§–∞–π–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞:")
        st.dataframe(df_supplier.head())

        key_col = st.selectbox("–°—Ç–æ–ª–±–µ—Ü –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è (–Ω–∞—à —Ñ–∞–π–ª)", df_order.columns)
        qty_col = st.selectbox("–°—Ç–æ–ª–±–µ—Ü —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º (–Ω–∞—à —Ñ–∞–π–ª)", df_order.columns)
        supplier_key_col = st.selectbox("–°—Ç–æ–ª–±–µ—Ü –¥–ª—è –ø–æ–∏—Å–∫–∞ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", df_supplier.columns)
        supplier_qty_col = st.selectbox("–°—Ç–æ–ª–±–µ—Ü –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", df_supplier.columns)

        if st.button("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª"):
            # –°–ª–æ–≤–∞—Ä—å –∫–ª—é—á -> –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
            qty_dict = dict(zip(df_order[key_col].astype(str), df_order[qty_col]))
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            total = len(df_supplier)
            df_supplier[supplier_key_col] = df_supplier[supplier_key_col].astype(str)

            # –ü–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
            df_supplier[supplier_qty_col] = df_supplier[supplier_key_col].map(qty_dict)

            # –°—á–∏—Ç–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            updated = df_supplier[supplier_qty_col].notna().sum()
            not_found = total - updated

            # –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            st.write(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ —É –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: **{total}**")
            st.write(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: **{updated}**")
            st.write(f"‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –∑–∞–∫–∞–∑–µ: **{not_found}**")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å
            output = BytesIO()
            df_supplier.to_excel(output, index=False, engine="openpyxl")

            st.success("‚úÖ –ì–æ—Ç–æ–≤–æ! –°–∫–∞—á–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∏–∂–µ.")
            st.download_button(
                label="‚¨á –°–∫–∞—á–∞—Ç—å –≥–æ—Ç–æ–≤—ã–π Excel",
                data=output.getvalue(),
                file_name="supplier_with_qty.xlsx",
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )
